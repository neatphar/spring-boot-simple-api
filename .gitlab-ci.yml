stages:
  - build
  - package
  - deploy

# So the way maven excutes the build lifecycles doesn't offer an option to isolate them.
# If it fails the compile/tests/lints it'll fail the build.
maven-build:
  stage: build
  image: amazoncorrectto:17
  before_script:
    - "chmod +x mvnw"
    - "./mvnw clean"
  script: 
    - "./mvnw package"
  artifacts:
    paths:
      - "target/*.jar"

docker-build:
  stage: package
  image: docker:dind
  variables:
    DOCKER_IMAGE_TAG: ${CI_REGISTRY_IMAGE}/java-app:${CI_COMMIT_SHORT_SHA}
  script:
    - "docker build -t ${DOCKER_IMAGE_TAG} ."
    - "docker login -u ${CI_REGISTRY_USER} -p ${CI_JOB_TOKEN} ${CI_REGISTRY_IMAGE}"
    - "docker push -t ${DOCKER_IMAGE_TAG}"

k8s-deploy:
  stage: deploy
  image: bitnami/kubectl
  script:
    - kubectl apply -f deployment.yml
  rules:
    - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /master/
      when: manual